/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.solmi.m1app;

public final class R {
    public static final class anim {
        public static final int alpha=0x7f040000;
        public static final int blink=0x7f040001;
    }
    public static final class attr {
        /**  We need a mask drawable to mask the background, then draw the track 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int backgroundMask=0x7f010014;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonBarButtonStyle=0x7f010001;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonBarStyle=0x7f010000;
        /**  drawablw to use when the switch is in the unchecked/"off" state. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int drawableOff=0x7f010007;
        /**  drawablw to use when the switch is in the checked/"on" state. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int drawableOn=0x7f010006;
        /**  the track drawable will be drawn on top of these background. So if
             these back grounds were to be visible, the track has to have transparency 
 The background when left side of the switch is visible 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int leftBackground=0x7f010012;
        /**  Default style for the Switch widget. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int mySwitchStyleAttr=0x7f01001d;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>1</td><td> the switch moves only on the x-axis(horizontally) </td></tr>
<tr><td><code>vertical</code></td><td>0</td><td> the switch moves only on the y-axis(vertically) </td></tr>
</table>
         */
        public static final int orientation=0x7f010011;
        /**  if the switch should operate like iOS UISwitch 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int pushStyle=0x7f010008;
        /**  The background when right side of the switch is visible 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int rightBackground=0x7f010013;
        /**  Minimum height for the switch component 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int switchMinHeight=0x7f01000f;
        /**  Minimum width for the switch component 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int switchMinWidth=0x7f01000e;
        /**  Minimum space between the switch and caption text 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int switchPadding=0x7f010010;
        /**  TextAppearance style for text displayed on the switch thumb. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int switchTextAppearanceAttrib=0x7f01000d;
        /**  Present the text in ALL CAPS. This may use a small-caps form when available. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textAllCaps=0x7f01001c;
        /**  Text color. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textColor=0x7f010015;
        /**  Color of the text selection highlight. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textColorHighlight=0x7f010019;
        /**  Color of the hint text. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textColorHint=0x7f01001a;
        /**  Color of the links. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textColorLink=0x7f01001b;
        /**  Text to use when the switch is in the unchecked/"off" state. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         */
        public static final int textOff=0x7f010005;
        /**  Text to use when the switch is in the checked/"on" state. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         */
        public static final int textOn=0x7f010004;
        /**  if text should be drawn on the Thumb or On the track. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textOnThumb=0x7f010009;
        /**  Size of the text. Recommended dimension type for text is "sp" for scaled-pixels (example: 15sp). 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textSize=0x7f010016;
        /**  Style (bold, italic, bolditalic) for the text. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
</table>
         */
        public static final int textStyle=0x7f010017;
        /**  Drawable to use as the "thumb" that switches back and forth. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int thumb=0x7f010002;
        /**  if the thumb should be allowed to move more beyond the switch boundaries 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int thumbExtraMovement=0x7f01000a;
        /**  Amount of padding on either side of text within the switch thumb. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int thumbTextPadding=0x7f01000b;
        /**  Drawable to use as the "track" that the switch thumb slides within. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int track=0x7f010003;
        /**  Amount of padding on either side of text within the switch track. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int trackTextPadding=0x7f01000c;
        /**  Typeface (normal, sans, serif, monospace) for the text. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>sans</code></td><td>1</td><td></td></tr>
<tr><td><code>serif</code></td><td>2</td><td></td></tr>
<tr><td><code>monospace</code></td><td>3</td><td></td></tr>
</table>
         */
        public static final int typeface=0x7f010018;
    }
    public static final class color {
        public static final int black=0x7f070004;
        public static final int black_overlay=0x7f070000;
        public static final int blue=0x7f070006;
        public static final int blue_transparent=0x7f070007;
        public static final int darkgray=0x7f07000c;
        public static final int gold=0x7f070002;
        public static final int gray=0x7f07000b;
        public static final int green=0x7f070009;
        public static final int lawngreen=0x7f07000a;
        public static final int lightblue=0x7f070005;
        public static final int lightgray=0x7f07000d;
        public static final int magenta=0x7f070011;
        public static final int mint=0x7f070013;
        public static final int opaque_shadow=0x7f07000e;
        public static final int orange=0x7f070012;
        public static final int red=0x7f070008;
        public static final int stat_label_background=0x7f07000f;
        public static final int stat_label_text=0x7f070010;
        public static final int transparent=0x7f070001;
        public static final int white=0x7f070003;
    }
    public static final class dimen {
        /**  Default screen margins, per the Android Design guidelines. 

         Customize dimensions originally defined in res/values/dimens.xml (such as
         screen margins) for sw720dp devices (e.g. 10" tablets) in landscape here.
    
         */
        public static final int activity_horizontal_margin=0x7f080000;
        public static final int activity_vertical_margin=0x7f080001;
    }
    public static final class drawable {
        public static final int a1=0x7f020000;
        public static final int a129=0x7f020001;
        public static final int a133=0x7f020002;
        public static final int a134=0x7f020003;
        public static final int a136=0x7f020004;
        public static final int a137=0x7f020005;
        public static final int a2=0x7f020006;
        public static final int a3=0x7f020007;
        public static final int a4=0x7f020008;
        public static final int activit_icon_off=0x7f020009;
        public static final int activit_icon_on=0x7f02000a;
        public static final int again=0x7f02000b;
        public static final int b1=0x7f02000c;
        public static final int b2=0x7f02000d;
        public static final int b3=0x7f02000e;
        public static final int b4=0x7f02000f;
        public static final int bac=0x7f020010;
        public static final int background=0x7f020011;
        public static final int background_fenced=0x7f020012;
        public static final int bar=0x7f020013;
        public static final int bca=0x7f020014;
        public static final int bingo=0x7f020015;
        public static final int bluetooth_logo=0x7f020016;
        public static final int bottle=0x7f020017;
        public static final int btn_1=0x7f020018;
        public static final int btn_2=0x7f020019;
        public static final int btn_facebook=0x7f02001a;
        public static final int btn_game_bg=0x7f02001b;
        public static final int btn_goexercise=0x7f02001c;
        public static final int btn_gogame=0x7f02001d;
        public static final int btn_gohistory=0x7f02001e;
        public static final int btn_gomain=0x7f02001f;
        public static final int btn_gosetting=0x7f020020;
        public static final int btn_kakao=0x7f020021;
        public static final int btn_mainmenu_bar=0x7f020022;
        public static final int btn_mainstart=0x7f020023;
        public static final int btn_opt_alram=0x7f020024;
        public static final int btn_opt_bg=0x7f020025;
        public static final int btn_opt_diary=0x7f020026;
        public static final int btn_opt_help=0x7f020027;
        public static final int btn_opt_plan=0x7f020028;
        public static final int btn_opt_sound=0x7f020029;
        public static final int btn_opt_user=0x7f02002a;
        public static final int btn_rad_1=0x7f02002b;
        public static final int btn_record_bar=0x7f02002c;
        public static final int btn_set_modify=0x7f02002d;
        public static final int btn_set_save=0x7f02002e;
        public static final int btn_submenu_bar=0x7f02002f;
        public static final int btn_twitter=0x7f020030;
        public static final int bulesky2=0x7f020031;
        public static final int button_activity_off=0x7f020032;
        public static final int button_activity_on=0x7f020033;
        public static final int button_game_off=0x7f020034;
        public static final int button_game_on=0x7f020035;
        public static final int button_main_off=0x7f020036;
        public static final int button_main_on=0x7f020037;
        public static final int button_off=0x7f020038;
        public static final int button_on=0x7f020039;
        public static final int button_option_off=0x7f02003a;
        public static final int button_option_on=0x7f02003b;
        public static final int button_record_off=0x7f02003c;
        public static final int button_record_on=0x7f02003d;
        public static final int check_point_blue=0x7f02003e;
        public static final int check_point_green=0x7f02003f;
        public static final int check_point_magenta=0x7f020040;
        public static final int check_point_orange=0x7f020041;
        public static final int choice_icon_off=0x7f020042;
        public static final int choice_icon_on=0x7f020043;
        public static final int clouds=0x7f020044;
        public static final int coke=0x7f020045;
        public static final int color=0x7f020046;
        public static final int copyright=0x7f020047;
        public static final int delete_icon_off=0x7f020048;
        public static final int delete_icon_on=0x7f020049;
        public static final int down_point=0x7f02004a;
        public static final int edit_icon_off=0x7f02004b;
        public static final int edit_icon_on=0x7f02004c;
        public static final int edt_bg=0x7f02004d;
        public static final int egauge=0x7f02004e;
        public static final int egaugebot=0x7f02004f;
        public static final int exit=0x7f020050;
        public static final int facebook_icon_off=0x7f020051;
        public static final int facebook_icon_on=0x7f020052;
        public static final int fillgauge=0x7f020053;
        public static final int game_button_off=0x7f020054;
        public static final int game_button_on=0x7f020055;
        public static final int go=0x7f020056;
        public static final int good=0x7f020057;
        public static final int green_drawable=0x7f0200bf;
        public static final int hand=0x7f020058;
        public static final int hand_point=0x7f020059;
        public static final int height=0x7f02005a;
        public static final int help=0x7f02005b;
        public static final int helpscene=0x7f02005c;
        public static final int ic_launcher=0x7f02005d;
        public static final int kakao_icon_off=0x7f02005e;
        public static final int kakao_icon_on=0x7f02005f;
        public static final int left_point=0x7f020060;
        public static final int left_point_record=0x7f020061;
        public static final int list_click_1=0x7f020062;
        public static final int m=0x7f020063;
        public static final int main_background_black=0x7f020064;
        public static final int main_background_white=0x7f020065;
        public static final int main_bg_dot=0x7f020066;
        public static final int main_menu_bar_off=0x7f020067;
        public static final int main_menu_bar_on=0x7f020068;
        public static final int main_title_1=0x7f020069;
        public static final int main_title_2=0x7f02006a;
        public static final int maximum_down_point=0x7f02006b;
        public static final int maximum_up_point=0x7f02006c;
        public static final int mind_bingo_icon=0x7f02006d;
        public static final int mind_color_icon=0x7f02006e;
        public static final int mind_tower_icon=0x7f02006f;
        public static final int newdelete=0x7f020070;
        public static final int number_icon=0x7f020071;
        public static final int option_alarm_off=0x7f020072;
        public static final int option_alarm_on=0x7f020073;
        public static final int option_button_off=0x7f020074;
        public static final int option_button_on=0x7f020075;
        public static final int option_help_off=0x7f020076;
        public static final int option_help_on=0x7f020077;
        public static final int option_target_off=0x7f020078;
        public static final int option_target_on=0x7f020079;
        public static final int optionicon_calendar_off=0x7f02007a;
        public static final int optionicon_calendar_on=0x7f02007b;
        public static final int optionicon_sound_off=0x7f02007c;
        public static final int optionicon_sound_on=0x7f02007d;
        public static final int optionicon_user_off=0x7f02007e;
        public static final int optionicon_user_on=0x7f02007f;
        public static final int padding_left=0x7f020080;
        public static final int popani0=0x7f020081;
        public static final int popani1=0x7f020082;
        public static final int popani2=0x7f020083;
        public static final int popani3=0x7f020084;
        public static final int popani4=0x7f020085;
        public static final int popani5=0x7f020086;
        public static final int popframe=0x7f020087;
        public static final int profile_change_image=0x7f020088;
        public static final int progress_1=0x7f020089;
        public static final int rankscene=0x7f02008a;
        public static final int ready=0x7f02008b;
        public static final int readyscene=0x7f02008c;
        public static final int readytext=0x7f02008d;
        public static final int record_bar_off=0x7f02008e;
        public static final int record_bar_on=0x7f02008f;
        public static final int record_icon_off=0x7f020090;
        public static final int record_icon_on=0x7f020091;
        public static final int record_point_down=0x7f020092;
        public static final int record_point_up=0x7f020093;
        public static final int red_drawable=0x7f0200be;
        public static final int refit_logo_large=0x7f020094;
        public static final int refit_logo_small=0x7f020095;
        public static final int return_icon_off=0x7f020096;
        public static final int return_icon_on=0x7f020097;
        public static final int right_point=0x7f020098;
        public static final int right_point_record=0x7f020099;
        public static final int risingani=0x7f02009a;
        public static final int runner=0x7f02009b;
        public static final int save_choice_off=0x7f02009c;
        public static final int save_choice_on=0x7f02009d;
        public static final int sgroove_copy=0x7f02009e;
        public static final int shake=0x7f02009f;
        public static final int shake_coke_icon=0x7f0200a0;
        public static final int shake_manual=0x7f0200a1;
        public static final int shake_runner_icon=0x7f0200a2;
        public static final int smask_background_copy=0x7f0200a3;
        public static final int sright_background=0x7f0200a4;
        public static final int sright_background_mask=0x7f0200a5;
        public static final int start_back_ground=0x7f0200a6;
        public static final int start_button_off=0x7f0200a7;
        public static final int start_button_on=0x7f0200a8;
        public static final int start_icon=0x7f0200a9;
        public static final int stoggle_copy=0x7f0200aa;
        public static final int sub_menu_bar_off=0x7f0200ab;
        public static final int sub_menu_bar_on=0x7f0200ac;
        public static final int sweep=0x7f0200ad;
        public static final int switch_track=0x7f0200ae;
        public static final int switch_track_green=0x7f0200af;
        public static final int text_clr=0x7f0200b0;
        public static final int text_clr_2=0x7f0200b1;
        public static final int text_clr_3=0x7f0200b2;
        public static final int text_clr_4=0x7f0200b3;
        public static final int time=0x7f0200b4;
        public static final int title_bar_off=0x7f0200b5;
        public static final int title_bar_on=0x7f0200b6;
        public static final int title_bar_progress=0x7f0200b7;
        public static final int title_name_bar=0x7f0200b8;
        public static final int tower=0x7f0200b9;
        public static final int twitter_icon_off=0x7f0200ba;
        public static final int twitter_icon_on=0x7f0200bb;
        public static final int up_point=0x7f0200bc;
        public static final int urgent=0x7f0200bd;
    }
    public static final class id {
        public static final int ConnectingLayout=0x7f060031;
        public static final int DevInfoZone=0x7f06000d;
        public static final int ItemSelectZone=0x7f060013;
        public static final int ResultZone=0x7f060010;
        public static final int TextView01=0x7f060027;
        public static final int TextView02=0x7f06002a;
        public static final int TextView03=0x7f060024;
        public static final int TextView05=0x7f06002d;
        public static final int TextView06=0x7f06000b;
        public static final int TextView07=0x7f06002b;
        public static final int TitleZone=0x7f060021;
        public static final int TitlezoneLayout=0x7f060009;
        public static final int action_settings=0x7f060038;
        public static final int bold=0x7f060003;
        public static final int btnAccTest=0x7f06001b;
        public static final int btnBTCtest=0x7f060015;
        public static final int btnHRSTtest=0x7f060019;
        public static final int btnRSteptest=0x7f06001a;
        public static final int btnSetRun20=0x7f060017;
        public static final int btnSetRunContinue=0x7f060018;
        public static final int btnStop=0x7f060016;
        public static final int btn_layout_game_bingo=0x7f060025;
        public static final int btn_layout_game_coke=0x7f060023;
        public static final int btn_layout_game_color=0x7f060026;
        public static final int btn_layout_game_runner=0x7f060022;
        public static final int btn_layout_game_sample=0x7f06002c;
        public static final int btn_layout_game_tower=0x7f060028;
        public static final int btsearchProgressbar=0x7f060032;
        public static final int button_scan=0x7f060014;
        public static final int horizontal=0x7f060000;
        public static final int imageView1=0x7f06000a;
        public static final int italic=0x7f060004;
        public static final int item_goExercise=0x7f06003a;
        public static final int item_goGame=0x7f06003b;
        public static final int item_goHistory=0x7f06003c;
        public static final int item_goMain=0x7f060039;
        public static final int item_goSetting=0x7f06003d;
        public static final int iv_selectedDev=0x7f06000e;
        public static final int logoIv=0x7f060008;
        public static final int mainProfileTv=0x7f06002f;
        public static final int mainStartBtn=0x7f060030;
        public static final int mainUserTv=0x7f06002e;
        public static final int monospace=0x7f060007;
        public static final int mySwitch1=0x7f060035;
        public static final int new_devices=0x7f060012;
        public static final int normal=0x7f060002;
        public static final int paired_devices=0x7f060037;
        public static final int progress_measure=0x7f06000c;
        public static final int rgdb_0=0x7f06001c;
        public static final int rgdb_1=0x7f06001d;
        public static final int rgdb_2=0x7f06001f;
        public static final int rgdb_3=0x7f060020;
        public static final int sans=0x7f060005;
        public static final int searchmentTv=0x7f060033;
        public static final int serif=0x7f060006;
        public static final int textView1=0x7f060034;
        public static final int textView2=0x7f060029;
        public static final int title_new_devices=0x7f060011;
        public static final int title_paired_devices=0x7f060036;
        public static final int tvTestLogger=0x7f06001e;
        public static final int tv_selectedDev=0x7f06000f;
        public static final int vertical=0x7f060001;
    }
    public static final class layout {
        public static final int activity_alram_set=0x7f030000;
        public static final int activity_app_start=0x7f030001;
        public static final int activity_bingo_game=0x7f030002;
        public static final int activity_bluetooth_search=0x7f030003;
        public static final int activity_coke_game=0x7f030004;
        public static final int activity_color_game=0x7f030005;
        public static final int activity_game=0x7f030006;
        public static final int activity_game_mode=0x7f030007;
        public static final int activity_main=0x7f030008;
        public static final int activity_runner_game=0x7f030009;
        public static final int activity_sound_set=0x7f03000a;
        public static final int activity_tower_game=0x7f03000b;
        public static final int dev_listview=0x7f03000c;
        public static final int dev_name=0x7f03000d;
    }
    public static final class menu {
        public static final int bingo_game=0x7f0b0000;
        public static final int coke_game=0x7f0b0001;
        public static final int color_game=0x7f0b0002;
        public static final int game_mode=0x7f0b0003;
        public static final int main_menu=0x7f0b0004;
        public static final int profile_set=0x7f0b0005;
        public static final int runner_game=0x7f0b0006;
        public static final int tower_game=0x7f0b0007;
    }
    public static final class raw {
        public static final int background=0x7f050000;
        public static final int countdown=0x7f050001;
        public static final int jenny=0x7f050002;
        public static final int rise=0x7f050003;
        public static final int sleepaway=0x7f050004;
        public static final int swipe=0x7f050005;
        public static final int when=0x7f050006;
        public static final int wood1=0x7f050007;
        public static final int wood2=0x7f050008;
    }
    public static final class string {
        public static final int action_settings=0x7f090012;
        public static final int app_bi=0x7f090001;
        /**  App name 
         */
        public static final int app_name=0x7f090000;
        public static final int autostart=0x7f09000b;
        public static final int biorhythm=0x7f09000d;
        /**  biorhythm ment's 
         */
        public static final int biorhythm_test_summary=0x7f090019;
        public static final int bmi=0x7f090010;
        public static final int bmi_level_1=0x7f09001e;
        public static final int bmi_level_2=0x7f09001f;
        public static final int bmi_level_3=0x7f090020;
        public static final int bmi_level_4=0x7f090021;
        public static final int bmi_level_5_1=0x7f090022;
        public static final int bmi_level_5_2=0x7f090023;
        public static final int goExercise=0x7f090004;
        public static final int goGame=0x7f090005;
        public static final int goHistory=0x7f090006;
        /**  menu item name 
         */
        public static final int goMain=0x7f090002;
        public static final int goProfile=0x7f090003;
        public static final int goSetting=0x7f090007;
        /**  title name 
         */
        public static final int healthMeasure=0x7f09000c;
        public static final int heartrate=0x7f09000e;
        public static final int hello_world=0x7f090013;
        public static final int holddevice_1=0x7f090009;
        public static final int holddevice_2=0x7f09000a;
        /**  comment 
         */
        public static final int searchingBT=0x7f090008;
        public static final int stress=0x7f09000f;
        public static final int title_activity_bingo_game=0x7f090014;
        public static final int title_activity_coke_game=0x7f090017;
        public static final int title_activity_color_game=0x7f090016;
        public static final int title_activity_game_mode=0x7f090011;
        public static final int title_activity_runner_game=0x7f090018;
        public static final int title_activity_tower_game=0x7f090015;
        public static final int userinfo_age=0x7f09001b;
        public static final int userinfo_height=0x7f09001c;
        /**  bmi ment's 
         */
        public static final int userinfo_sex=0x7f09001a;
        public static final int userinfo_weight=0x7f09001d;
    }
    public static final class style {
        /** 
        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.

    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.

        

        Base application theme for API 11+. This theme completely replaces
        AppBaseTheme from res/values/styles.xml on API 11+ devices.

    
 API 11 theme customizations can go here. 

        Base application theme for API 14+. This theme completely replaces
        AppBaseTheme from BOTH res/values/styles.xml and
        res/values-v11/styles.xml on API 14+ devices.
    
 API 14 theme customizations can go here. 
         */
        public static final int AppBaseTheme=0x7f0a0000;
        /**  Application theme. 
 All customizations that are NOT specific to a particular API-level can go here. 
         */
        public static final int AppTheme=0x7f0a0001;
        public static final int ButtonBar=0x7f0a0003;
        public static final int ButtonBarButton=0x7f0a0004;
        public static final int FullscreenActionBarStyle=0x7f0a0008;
        public static final int FullscreenTheme=0x7f0a0002;
        public static final int SwitchText=0x7f0a0005;
        public static final int mySwitchStyle=0x7f0a0006;
        public static final int mySwitchTextAppearance=0x7f0a0007;
    }
    public static final class styleable {
        /** 
         Declare custom theme attributes that allow changing which styles are
         used for button bars depending on the API level.
         ?android:attr/buttonBarStyle is new as of API 11 so this is
         necessary to support previous API levels.
    
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ButtonBarContainerTheme_buttonBarButtonStyle com.solmi.m1app:buttonBarButtonStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #ButtonBarContainerTheme_buttonBarStyle com.solmi.m1app:buttonBarStyle}</code></td><td></td></tr>
           </table>
           @see #ButtonBarContainerTheme_buttonBarButtonStyle
           @see #ButtonBarContainerTheme_buttonBarStyle
         */
        public static final int[] ButtonBarContainerTheme = {
            0x7f010000, 0x7f010001
        };
        /**
          <p>This symbol is the offset where the {@link com.solmi.m1app.R.attr#buttonBarButtonStyle}
          attribute's value can be found in the {@link #ButtonBarContainerTheme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.solmi.m1app:buttonBarButtonStyle
        */
        public static final int ButtonBarContainerTheme_buttonBarButtonStyle = 1;
        /**
          <p>This symbol is the offset where the {@link com.solmi.m1app.R.attr#buttonBarStyle}
          attribute's value can be found in the {@link #ButtonBarContainerTheme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.solmi.m1app:buttonBarStyle
        */
        public static final int ButtonBarContainerTheme_buttonBarStyle = 0;
        /** Attributes that can be used with a MySwitch.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MySwitch_backgroundMask com.solmi.m1app:backgroundMask}</code></td><td> We need a mask drawable to mask the background, then draw the track </td></tr>
           <tr><td><code>{@link #MySwitch_drawableOff com.solmi.m1app:drawableOff}</code></td><td> drawablw to use when the switch is in the unchecked/"off" state.</td></tr>
           <tr><td><code>{@link #MySwitch_drawableOn com.solmi.m1app:drawableOn}</code></td><td> drawablw to use when the switch is in the checked/"on" state.</td></tr>
           <tr><td><code>{@link #MySwitch_leftBackground com.solmi.m1app:leftBackground}</code></td><td> the track drawable will be drawn on top of these background.</td></tr>
           <tr><td><code>{@link #MySwitch_orientation com.solmi.m1app:orientation}</code></td><td></td></tr>
           <tr><td><code>{@link #MySwitch_pushStyle com.solmi.m1app:pushStyle}</code></td><td> if the switch should operate like iOS UISwitch </td></tr>
           <tr><td><code>{@link #MySwitch_rightBackground com.solmi.m1app:rightBackground}</code></td><td> The background when right side of the switch is visible </td></tr>
           <tr><td><code>{@link #MySwitch_switchMinHeight com.solmi.m1app:switchMinHeight}</code></td><td> Minimum height for the switch component </td></tr>
           <tr><td><code>{@link #MySwitch_switchMinWidth com.solmi.m1app:switchMinWidth}</code></td><td> Minimum width for the switch component </td></tr>
           <tr><td><code>{@link #MySwitch_switchPadding com.solmi.m1app:switchPadding}</code></td><td> Minimum space between the switch and caption text </td></tr>
           <tr><td><code>{@link #MySwitch_switchTextAppearanceAttrib com.solmi.m1app:switchTextAppearanceAttrib}</code></td><td> TextAppearance style for text displayed on the switch thumb.</td></tr>
           <tr><td><code>{@link #MySwitch_textOff com.solmi.m1app:textOff}</code></td><td> Text to use when the switch is in the unchecked/"off" state.</td></tr>
           <tr><td><code>{@link #MySwitch_textOn com.solmi.m1app:textOn}</code></td><td> Text to use when the switch is in the checked/"on" state.</td></tr>
           <tr><td><code>{@link #MySwitch_textOnThumb com.solmi.m1app:textOnThumb}</code></td><td> if text should be drawn on the Thumb or On the track.</td></tr>
           <tr><td><code>{@link #MySwitch_thumb com.solmi.m1app:thumb}</code></td><td> Drawable to use as the "thumb" that switches back and forth.</td></tr>
           <tr><td><code>{@link #MySwitch_thumbExtraMovement com.solmi.m1app:thumbExtraMovement}</code></td><td> if the thumb should be allowed to move more beyond the switch boundaries </td></tr>
           <tr><td><code>{@link #MySwitch_thumbTextPadding com.solmi.m1app:thumbTextPadding}</code></td><td> Amount of padding on either side of text within the switch thumb.</td></tr>
           <tr><td><code>{@link #MySwitch_track com.solmi.m1app:track}</code></td><td> Drawable to use as the "track" that the switch thumb slides within.</td></tr>
           <tr><td><code>{@link #MySwitch_trackTextPadding com.solmi.m1app:trackTextPadding}</code></td><td> Amount of padding on either side of text within the switch track.</td></tr>
           </table>
           @see #MySwitch_backgroundMask
           @see #MySwitch_drawableOff
           @see #MySwitch_drawableOn
           @see #MySwitch_leftBackground
           @see #MySwitch_orientation
           @see #MySwitch_pushStyle
           @see #MySwitch_rightBackground
           @see #MySwitch_switchMinHeight
           @see #MySwitch_switchMinWidth
           @see #MySwitch_switchPadding
           @see #MySwitch_switchTextAppearanceAttrib
           @see #MySwitch_textOff
           @see #MySwitch_textOn
           @see #MySwitch_textOnThumb
           @see #MySwitch_thumb
           @see #MySwitch_thumbExtraMovement
           @see #MySwitch_thumbTextPadding
           @see #MySwitch_track
           @see #MySwitch_trackTextPadding
         */
        public static final int[] MySwitch = {
            0x7f010002, 0x7f010003, 0x7f010004, 0x7f010005,
            0x7f010006, 0x7f010007, 0x7f010008, 0x7f010009,
            0x7f01000a, 0x7f01000b, 0x7f01000c, 0x7f01000d,
            0x7f01000e, 0x7f01000f, 0x7f010010, 0x7f010011,
            0x7f010012, 0x7f010013, 0x7f010014
        };
        /**
          <p>
          @attr description
           We need a mask drawable to mask the background, then draw the track 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.solmi.m1app:backgroundMask
        */
        public static final int MySwitch_backgroundMask = 18;
        /**
          <p>
          @attr description
           drawablw to use when the switch is in the unchecked/"off" state. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.solmi.m1app:drawableOff
        */
        public static final int MySwitch_drawableOff = 5;
        /**
          <p>
          @attr description
           drawablw to use when the switch is in the checked/"on" state. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.solmi.m1app:drawableOn
        */
        public static final int MySwitch_drawableOn = 4;
        /**
          <p>
          @attr description
           the track drawable will be drawn on top of these background. So if
             these back grounds were to be visible, the track has to have transparency 
 The background when left side of the switch is visible 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.solmi.m1app:leftBackground
        */
        public static final int MySwitch_leftBackground = 16;
        /**
          <p>This symbol is the offset where the {@link com.solmi.m1app.R.attr#orientation}
          attribute's value can be found in the {@link #MySwitch} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>1</td><td> the switch moves only on the x-axis(horizontally) </td></tr>
<tr><td><code>vertical</code></td><td>0</td><td> the switch moves only on the y-axis(vertically) </td></tr>
</table>
          @attr name com.solmi.m1app:orientation
        */
        public static final int MySwitch_orientation = 15;
        /**
          <p>
          @attr description
           if the switch should operate like iOS UISwitch 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.solmi.m1app:pushStyle
        */
        public static final int MySwitch_pushStyle = 6;
        /**
          <p>
          @attr description
           The background when right side of the switch is visible 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.solmi.m1app:rightBackground
        */
        public static final int MySwitch_rightBackground = 17;
        /**
          <p>
          @attr description
           Minimum height for the switch component 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.solmi.m1app:switchMinHeight
        */
        public static final int MySwitch_switchMinHeight = 13;
        /**
          <p>
          @attr description
           Minimum width for the switch component 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.solmi.m1app:switchMinWidth
        */
        public static final int MySwitch_switchMinWidth = 12;
        /**
          <p>
          @attr description
           Minimum space between the switch and caption text 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.solmi.m1app:switchPadding
        */
        public static final int MySwitch_switchPadding = 14;
        /**
          <p>
          @attr description
           TextAppearance style for text displayed on the switch thumb. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.solmi.m1app:switchTextAppearanceAttrib
        */
        public static final int MySwitch_switchTextAppearanceAttrib = 11;
        /**
          <p>
          @attr description
           Text to use when the switch is in the unchecked/"off" state. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This is a private symbol.
          @attr name com.solmi.m1app:textOff
        */
        public static final int MySwitch_textOff = 3;
        /**
          <p>
          @attr description
           Text to use when the switch is in the checked/"on" state. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This is a private symbol.
          @attr name com.solmi.m1app:textOn
        */
        public static final int MySwitch_textOn = 2;
        /**
          <p>
          @attr description
           if text should be drawn on the Thumb or On the track. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.solmi.m1app:textOnThumb
        */
        public static final int MySwitch_textOnThumb = 7;
        /**
          <p>
          @attr description
           Drawable to use as the "thumb" that switches back and forth. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.solmi.m1app:thumb
        */
        public static final int MySwitch_thumb = 0;
        /**
          <p>
          @attr description
           if the thumb should be allowed to move more beyond the switch boundaries 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.solmi.m1app:thumbExtraMovement
        */
        public static final int MySwitch_thumbExtraMovement = 8;
        /**
          <p>
          @attr description
           Amount of padding on either side of text within the switch thumb. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.solmi.m1app:thumbTextPadding
        */
        public static final int MySwitch_thumbTextPadding = 9;
        /**
          <p>
          @attr description
           Drawable to use as the "track" that the switch thumb slides within. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.solmi.m1app:track
        */
        public static final int MySwitch_track = 1;
        /**
          <p>
          @attr description
           Amount of padding on either side of text within the switch track. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.solmi.m1app:trackTextPadding
        */
        public static final int MySwitch_trackTextPadding = 10;
        /** Attributes that can be used with a mySwitchTextAppearanceAttrib.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #mySwitchTextAppearanceAttrib_textAllCaps com.solmi.m1app:textAllCaps}</code></td><td> Present the text in ALL CAPS.</td></tr>
           <tr><td><code>{@link #mySwitchTextAppearanceAttrib_textColor com.solmi.m1app:textColor}</code></td><td> Text color.</td></tr>
           <tr><td><code>{@link #mySwitchTextAppearanceAttrib_textColorHighlight com.solmi.m1app:textColorHighlight}</code></td><td> Color of the text selection highlight.</td></tr>
           <tr><td><code>{@link #mySwitchTextAppearanceAttrib_textColorHint com.solmi.m1app:textColorHint}</code></td><td> Color of the hint text.</td></tr>
           <tr><td><code>{@link #mySwitchTextAppearanceAttrib_textColorLink com.solmi.m1app:textColorLink}</code></td><td> Color of the links.</td></tr>
           <tr><td><code>{@link #mySwitchTextAppearanceAttrib_textSize com.solmi.m1app:textSize}</code></td><td> Size of the text.</td></tr>
           <tr><td><code>{@link #mySwitchTextAppearanceAttrib_textStyle com.solmi.m1app:textStyle}</code></td><td> Style (bold, italic, bolditalic) for the text.</td></tr>
           <tr><td><code>{@link #mySwitchTextAppearanceAttrib_typeface com.solmi.m1app:typeface}</code></td><td> Typeface (normal, sans, serif, monospace) for the text.</td></tr>
           </table>
           @see #mySwitchTextAppearanceAttrib_textAllCaps
           @see #mySwitchTextAppearanceAttrib_textColor
           @see #mySwitchTextAppearanceAttrib_textColorHighlight
           @see #mySwitchTextAppearanceAttrib_textColorHint
           @see #mySwitchTextAppearanceAttrib_textColorLink
           @see #mySwitchTextAppearanceAttrib_textSize
           @see #mySwitchTextAppearanceAttrib_textStyle
           @see #mySwitchTextAppearanceAttrib_typeface
         */
        public static final int[] mySwitchTextAppearanceAttrib = {
            0x7f010015, 0x7f010016, 0x7f010017, 0x7f010018,
            0x7f010019, 0x7f01001a, 0x7f01001b, 0x7f01001c
        };
        /**
          <p>
          @attr description
           Present the text in ALL CAPS. This may use a small-caps form when available. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.solmi.m1app:textAllCaps
        */
        public static final int mySwitchTextAppearanceAttrib_textAllCaps = 7;
        /**
          <p>
          @attr description
           Text color. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.solmi.m1app:textColor
        */
        public static final int mySwitchTextAppearanceAttrib_textColor = 0;
        /**
          <p>
          @attr description
           Color of the text selection highlight. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.solmi.m1app:textColorHighlight
        */
        public static final int mySwitchTextAppearanceAttrib_textColorHighlight = 4;
        /**
          <p>
          @attr description
           Color of the hint text. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.solmi.m1app:textColorHint
        */
        public static final int mySwitchTextAppearanceAttrib_textColorHint = 5;
        /**
          <p>
          @attr description
           Color of the links. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.solmi.m1app:textColorLink
        */
        public static final int mySwitchTextAppearanceAttrib_textColorLink = 6;
        /**
          <p>
          @attr description
           Size of the text. Recommended dimension type for text is "sp" for scaled-pixels (example: 15sp). 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.solmi.m1app:textSize
        */
        public static final int mySwitchTextAppearanceAttrib_textSize = 1;
        /**
          <p>
          @attr description
           Style (bold, italic, bolditalic) for the text. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.solmi.m1app:textStyle
        */
        public static final int mySwitchTextAppearanceAttrib_textStyle = 2;
        /**
          <p>
          @attr description
           Typeface (normal, sans, serif, monospace) for the text. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>sans</code></td><td>1</td><td></td></tr>
<tr><td><code>serif</code></td><td>2</td><td></td></tr>
<tr><td><code>monospace</code></td><td>3</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.solmi.m1app:typeface
        */
        public static final int mySwitchTextAppearanceAttrib_typeface = 3;
    };
}
